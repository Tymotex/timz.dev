{"version":3,"sources":["webpack:///./src/components/templates/blog.js","webpack:///./src/components/templates/blog.module.scss","webpack:///(webpack)/buildin/global.js"],"names":["query","Blog","data","convertedHtml","pageContext","marked","markdownRemark","rawMarkdownBody","className","styles","blogContainer","dangerouslySetInnerHTML","__html","module","exports","g","this","Function","e","window"],"mappings":"6FACA,gHAMaA,EAAK,aAsDHC,UApCF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAENC,GAF8B,EAAlBC,YAEIC,IAAOH,EAAKI,eAAeC,kBAEjD,OACI,yBAAKC,UAAWC,IAAOC,eACnB,yBAAKC,wBAAyB,CAACC,OAAQT,Q,qBC9BnDU,EAAOC,QAAU,CAAC,cAAgB,sC,mBCDlC,IAAIC,EAGJA,EAAI,WACH,OAAOC,KADJ,GAIJ,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAXC,SAAqBJ,EAAII,QAOrCN,EAAOC,QAAUC","file":"component---src-components-templates-blog-js-83fad4eb4bbf288cd92a.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport styles from './blog.module.scss';\nimport marked from 'marked';\n\n// This GraphQL query gets run for every markdown file that exists in:\n// src/components/windows/project-window/project-descriptions \nexport const query = graphql`\n    query ($slug: String!) {\n        markdownRemark (\n            fields: {\n                slug: {\n                    eq: $slug\n                }\n            }\n        ) {\n            rawMarkdownBody,\n            id,\n            fields {\n                slug\n            }\n        }\n    }\n`;\n\nconst Blog = ({ data, pageContext }) => {\n    // The .md file content is first converted to HTML, then rendered using dangerouslySetInnerHTML \n    const convertedHtml = marked(data.markdownRemark.rawMarkdownBody);\n    \n    return (\n        <div className={styles.blogContainer}>\n            <div dangerouslySetInnerHTML={{__html: convertedHtml}} />\n        </div>\n    );\n}\n\n// export const query = graphql`\n//     query {\n//         allContentfulBlogPost {\n//             edges {\n//                 node {\n//                     title,\n//                     publishedDate\n//                 }\n//             }\n//         }  \n//     } \n// `;\n\n// const Blog = ({ data, pageContext }) => {\n//     return (\n//         <div>\n//             {data.allContentfulBlogPost.edges.forEach((eachEdge) => (\n//                 <div>\n//                     {eachEdge.node.title}\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// }\n\nexport default Blog;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogContainer\":\"blog-module--blogContainer--2imsX\"};","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}